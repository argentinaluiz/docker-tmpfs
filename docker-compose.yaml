version: '3'

services:

  app:
    build: .
    volumes:
      - .:/home/node/app


  mysql_tmpfs:
    profiles:
      - mysql
    image: mysql:8.0.30-debian
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=fullcycle
    tmpfs:
      - /var/lib/mysql
  
  mysql:
    profiles:
      - mysql
    image: mysql:8.0.30-debian
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=fullcycle
  
  postgres_tmpfs:
    profiles:
      - postgres
    image: postgres:13-alpine
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=fullcycle
    tmpfs:
      - /var/lib/postgresql/data
  
  postgres:
    profiles:
      - postgres
    image: postgres:13-alpine
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=fullcycle
  
  sqlserver_tmpfs:
    profiles:
      - sqlserver
    build: 
      context: ./.docker/sql-server
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=StrongPassw0rd
    volumes:
      - /data:/var/opt/mssql/data:cached
    # tmpfs:
    #   - /var/opt/mssql/data
    
    # tmpfs: # o sqlserver ainda n√£o suporta tmpfs nativamente
    #   - /var/opt/mssql/data
    # https://github.com/microsoft/mssql-docker/issues/110
    ######## criar loopback filesystem em cima do tmps ######
    # sudo su
    # mkdir /ramcache
    # mount -t tmpfs -o size=1G tmpfs /ramcache
    # cd /ramcache
    # dd if=/dev/zero of=disk.img bs=1M count=10240
    # losetup /dev/loop0 disk.img
    # mkfs.ext4 /dev/loop0
    # mkdir /data
    # mount /dev/loop0 /data
    ######## desfazer a montagem ###########
    # umount /data
    # losetup -d /dev/loop0
    # rm /ramcache/disk.img
    # umount /ramcache
  
  sqlserver:
    profiles:
      - sqlserver
    build: 
      context: ./.docker/sql-server
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=StrongPassw0rd

  
  mongo_tmpfs:
    profiles:
      - mongo
    image: mongo:6.0.5 
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    tmpfs:
      - /data/db
  
  mongo:
    profiles:
      - mongo
    image: mongo:6.0.5 
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
  
  oracle:
    profiles:
      - oracle
    image: container-registry.oracle.com/database/free:23.2.0.0
    environment:
      - ORACLE_PWD=root
  
  oracle_tmpfs:
    profiles:
      - oracle
    image: container-registry.oracle.com/database/free:23.2.0.0
    environment:
      - ORACLE_PWD=root
    volumes:
      - /data:/opt/oracle/oradata